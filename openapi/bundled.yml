openapi: 3.0.3
info:
  title: Horizon
  version: 0.0.1
servers:
  - url: https://horizon.stellar.org
    description: The main network
  - url: https://horizon-testnet.stellar.org
    description: The test network
tags:
  - name: Accounts
    description: Users interact with the Stellar network through accounts. Everything else in the ledger—assets, offers, trustlines, etc. are owned by accounts, and accounts must authorize all changes to the ledger through signed transactions.
  - name: Assets
    description: Assets are representations of value issued on the Stellar network. An asset consists of a type, code, and issuer.
  - name: Offers
    description: Offers are statements about how much of an asset an account wants to buy or sell.
  - name: Trades
    description: When an offer is fully or partially fulfilled, a trade happens. Trades can also be caused by successful path payments, because path payments involve fulfilling offers. A trade occurs between two parties—base and counter. Which is which is either arbitrary or determined by the calling query.
paths:
  /accounts:
    get:
      tags:
        - Accounts
      summary: List all Accounts
      description: 'This endpoint lists accounts by one of four filters : signer, asset, liquidity pool  or sponsor.'
      operationId: ListAllAccounts
      parameters:
        - $ref: '#/components/parameters/SponsorParam'
        - $ref: '#/components/parameters/AssetParam'
        - $ref: '#/components/parameters/SignerParam'
        - $ref: '#/components/parameters/LiquidityPoolParam'
        - $ref: '#/components/parameters/CursorParam'
        - $ref: '#/components/parameters/OrderParam'
        - $ref: '#/components/parameters/LimitParam'
      responses:
        '200':
          description: 'Returns accounts based on provided filter: signer , asset, sponser or liquidity pool'
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Links'
                  - $ref: '#/components/schemas/Account'
  /accounts/{account_id}:
    get:
      tags:
        - Accounts
      summary: Retrieve an Account
      description: The single account endpoint provides information on a specific account. The balances section in the response will also list all the trustlines this account has established, including trustlines that haven’t been authorized yet.
      operationId: RetrieveAnAccount
      parameters:
        - $ref: '#/components/parameters/AccountIDParam'
      responses:
        '200':
          description: Returns details like balances, sponserships etc. about an account.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/AccountLink'
                  - $ref: '#/components/schemas/Account'
  /accounts/{account_id}/transactions:
    get:
      tags:
        - Accounts
      summary: Retrieve an Account's Transactions
      description: This endpoint represents successful transactions for a given account and can be used in streaming mode. Streaming mode allows you to listen for new transactions for this account as they are added to the Stellar ledger. If called in streaming mode, Horizon will start at the earliest known transaction unless a cursor is set, in which case it will start from that cursor. By setting the cursor value to now, you can stream transactions created since your request time.
      operationId: GetTransactionsByAccountid
      parameters:
        - $ref: '#/components/parameters/AccountIDParam'
        - $ref: '#/components/parameters/CursorParam'
        - $ref: '#/components/parameters/OrderParam'
        - $ref: '#/components/parameters/LimitParam'
        - $ref: '#/components/parameters/IncludeFailedParam'
      responses:
        '200':
          description: blank
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Links'
                  - $ref: '#/components/schemas/Transaction'
  /accounts/{account_id}/operations:
    get:
      tags:
        - Accounts
      summary: Retrieve an Account's Operations
      description: This endpoint represents successful operations for a given account and can be used in streaming mode. Streaming mode allows you to listen for new operations for this account as they are added to the Stellar ledger. If called in streaming mode, Horizon will start at the earliest known operation unless a cursor is set, in which case it will start from that cursor. By setting the cursor value to now, you can stream operations created since your request time.
      operationId: GetOperationsByAccountid
      parameters:
        - $ref: '#/components/parameters/AccountIDParam'
        - $ref: '#/components/parameters/CursorParam'
        - $ref: '#/components/parameters/OrderParam'
        - $ref: '#/components/parameters/LimitParam'
        - $ref: '#/components/parameters/IncludeFailedParam'
        - $ref: '#/components/parameters/JoinParam'
      responses:
        '200':
          description: OK
  /accounts/{account_id}/payments:
    get:
      tags:
        - Accounts
      summary: Retrieve an Account's Payments
      description: This endpoint represents successful payments for a given account and can be used in streaming mode. Streaming mode allows you to listen for new payments for this account as they are added to the Stellar ledger. If called in streaming mode, Horizon will start at the earliest known payment unless a cursor is set, in which case it will start from that cursor. By setting the cursor value to now, you can stream payments created since your request time.
      operationId: GetPaymentsbyAccountid
      parameters:
        - $ref: '#/components/parameters/AccountIDParam'
        - $ref: '#/components/parameters/CursorParam'
        - $ref: '#/components/parameters/OrderParam'
        - $ref: '#/components/parameters/LimitParam'
        - $ref: '#/components/parameters/IncludeFailedParam'
        - $ref: '#/components/parameters/JoinParam'
      responses:
        '200':
          description: blank
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Links'
                  - $ref: '#/components/schemas/Payment'
  /accounts/{account_id}/effects:
    get:
      tags:
        - Accounts
      summary: Retrieve an Account's Effects
      description: This endpoint returns the effects of a specific account and can be used in streaming mode. Streaming mode allows you to listen for new effects for this account as they are added to the Stellar ledger. If called in streaming mode, Horizon will start at the earliest known effect unless a cursor is set, in which case it will start from that cursor. By setting the cursor value to now, you can stream effects created since your request time.
      operationId: GetEffectsbyAccountid
      parameters:
        - $ref: '#/components/parameters/AccountIDParam'
        - $ref: '#/components/parameters/CursorParam'
        - $ref: '#/components/parameters/OrderParam'
        - $ref: '#/components/parameters/LimitParam'
      responses:
        '200':
          description: OK
  /accounts/{account_id}/offers:
    get:
      tags:
        - Accounts
      summary: Retrieve an Account's Offers
      description: This endpoint represents all offers a given account has currently open and can be used in streaming mode. Streaming mode allows you to listen for new offers for this account as they are added to the Stellar ledger. If called in streaming mode, Horizon will start at the earliest known offer unless a cursor is set, in which case it will start from that cursor. By setting the cursor value to now, you can stream offers created since your request time.
      operationId: GetOffersbyAccountid
      parameters:
        - $ref: '#/components/parameters/AccountIDParam'
        - $ref: '#/components/parameters/CursorParam'
        - $ref: '#/components/parameters/OrderParam'
        - $ref: '#/components/parameters/LimitParam'
      responses:
        '200':
          description: blank
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Links'
                  - $ref: '#/components/schemas/Offer'
  /accounts/{account_id}/trades:
    get:
      tags:
        - Accounts
      summary: Retrieve an Account's Trades
      description: This endpoint represents all trades for a given account and can be used in streaming mode. Streaming mode allows you to listen for trades for this account as they are added to the Stellar ledger. If called in streaming mode, Horizon will start at the earliest known trade unless a cursor is set, in which case it will start from that cursor. By setting the cursor value to now, you can stream trades created since your request time.
      operationId: GetTradesbyAccountid
      parameters:
        - $ref: '#/components/parameters/AccountIDParam'
        - $ref: '#/components/parameters/CursorParam'
        - $ref: '#/components/parameters/OrderParam'
        - $ref: '#/components/parameters/LimitParam'
      responses:
        '200':
          description: blank
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Links'
                  - $ref: '#/components/schemas/Trade'
  /accounts/{account_id}/data/{key}:
    get:
      tags:
        - Accounts
      summary: Retrieve an Account's Data
      description: This endpoint represents a single data for a given account.
      operationId: GetDatabyAccountid
      parameters:
        - $ref: '#/components/parameters/AccountIDParam'
        - $ref: '#/components/parameters/DataParam'
      responses:
        '200':
          description: blank
          content:
            application/json:
              schema:
                type: object
                properties:
                  value:
                    type: string
  /offers:
    get:
      tags:
        - Offers
      summary: List All Offers
      description: This endpoint lists all currently open offers and can be used in streaming mode. Streaming mode allows you to listen for new offers as they are added to the Stellar ledger. If called in streaming mode, Horizon will start at the earliest known offer unless a cursor is set, in which case it will start from that cursor. By setting the cursor value to now, you can stream offers created since your request time. When filtering by buying or selling arguments, you must use a combination of selling_asset_type, selling_asset_issuer, and selling_asset_code for the selling asset, or a combination of buying_asset_type, buying_asset_issuer, and buying_asset_code for the buying asset.
      operationId: GetAllOffers
      parameters:
        - $ref: '#/components/parameters/SponsorParam'
        - $ref: '#/components/parameters/SellerParam'
        - $ref: '#/components/parameters/SellingAssetTypeParam'
        - $ref: '#/components/parameters/SellingAssetIssuerParam'
        - $ref: '#/components/parameters/SellingAssetCodeParam'
        - $ref: '#/components/parameters/BuyingAssetTypeParam'
        - $ref: '#/components/parameters/BuyingAssetIssuerParam'
        - $ref: '#/components/parameters/BuyingAssetCodeParam'
        - $ref: '#/components/parameters/CursorParam'
        - $ref: '#/components/parameters/OrderParam'
        - $ref: '#/components/parameters/LimitParam'
      responses:
        '200':
          description: blank
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Links'
                  - $ref: '#/components/schemas/Offer'
  /offers/{offer_id}:
    get:
      tags:
        - Offers
      summary: Retrieve an Offer
      description: The single offer endpoint provides information on a specific offer.
      operationId: GetOfferbyOfferid
      parameters:
        - $ref: '#/components/parameters/OfferIDParam'
      responses:
        '200':
          description: blank
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Links'
                  - $ref: '#/components/schemas/Offer'
  /offers/{offer_id}/trades:
    get:
      tags:
        - Offers
      summary: Retrieve an Account's Trades
      description: This endpoint represents all trades for a given offer and can be used in streaming mode. Streaming mode allows you to listen for trades for this offer as they are added to the Stellar ledger. If called in streaming mode, Horizon will start at the earliest known trade unless a cursor is set, in which case it will start from that cursor. By setting the cursor value to now, you can stream trades created since your request time.
      operationId: GetTradebyOfferid
      parameters:
        - $ref: '#/components/parameters/OfferIDParam'
        - $ref: '#/components/parameters/CursorParam'
        - $ref: '#/components/parameters/OrderParam'
        - $ref: '#/components/parameters/LimitParam'
      responses:
        '200':
          description: blank
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Links'
                  - $ref: '#/components/schemas/Trade'
  /trades:
    get:
      tags:
        - Trades
      summary: List All Trades
      description: 'This endpoint lists all trades and can be used in streaming mode. Streaming mode allows you to listen for new trades as they are added to the Stellar ledger. If called in streaming mode, Horizon will start at the earliest known trade unless a cursor is set, in which case it will start from that cursor. By setting the cursor value to now, you can stream trades created since your request time. When filtering for a specific orderbook, you must use use all six of these arguments: base_asset_type, base_asset_issuer, base_asset_code, counter_asset_type, counter_asset_issuer, and counter_asset_code. If the base or counter asset is XLM, you only need to indicate the asset type as native and do not need to designate the code or the issuer.'
      operationId: GetAllTrades
      parameters:
        - $ref: '#/components/parameters/OfferIdParam'
        - $ref: '#/components/parameters/BaseAssetTypeParam'
        - $ref: '#/components/parameters/BaseAssetIssuerParam'
        - $ref: '#/components/parameters/BaseAssetCodeParam'
        - $ref: '#/components/parameters/CounterAssetTypeParam'
        - $ref: '#/components/parameters/CounterAssetIssuerParam'
        - $ref: '#/components/parameters/CounterAssetCodeParam'
        - $ref: '#/components/parameters/TradeTypeParam'
        - $ref: '#/components/parameters/CursorParam'
        - $ref: '#/components/parameters/OrderParam'
        - $ref: '#/components/parameters/LimitParam'
      responses:
        '200':
          description: blank
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Links'
                  - $ref: '#/components/schemas/Trade'
components:
  parameters:
    SponsorParam:
      name: sponser
      in: query
      required: false
      description: Account ID of the sponsor. Every account in the response will either be sponsored by the given account ID or have a subentry (trustline, offer, or data entry) which is sponsored by the given account ID.
      schema:
        type: string
        example: GDMQQNJM4UL7QIA66P7R2PZHMQINWZBM77BEBMHLFXD5JEUAHGJ7R4JZ
    AssetParam:
      name: asset
      in: query
      required: false
      description: An issued asset represented as “Code:IssuerAccountID”. Every account in the response will have a trustline for the given asset.
    SignerParam:
      name: signer
      in: query
      required: false
      description: Account ID of the signer. Every account in the response will have the given account ID as a signer.
      schema:
        type: string
        example: GDMQQNJM4UL7QIA66P7R2PZHMQINWZBM77BEBMHLFXD5JEUAHGJ7R4JZ
    LiquidityPoolParam:
      name: liqudity_pool
      in: query
      required: false
      description: With this parameter, the results will include only accounts which have trustlines to the specified liquidity pool.
    CursorParam:
      name: cursor
      in: query
      required: false
      description: A number that points to a specific location in a collection of responses and is pulled from the paging_token value of a record.
      schema:
        type: integer
        example: 6606617478959105
    OrderParam:
      name: order
      in: query
      required: false
      description: A designation of the order in which records should appear. Options include asc (ascending) or desc (descending). If this argument isn’t set, it defaults to asc.
      schema:
        type: string
        enum:
          - asc
          - desc
    LimitParam:
      name: limit
      in: query
      required: false
      description: The maximum number of records returned. The limit can range from 1 to 200 - an upper limit that is hardcoded in Horizon for performance reasons. If this argument isn’t designated, it defaults to 10.
      schema:
        type: integer
        example: 10
    AccountIDParam:
      name: account_id
      in: path
      required: true
      description: This account’s public key encoded in a base32 string representation.
      schema:
        type: string
        example: GDMQQNJM4UL7QIA66P7R2PZHMQINWZBM77BEBMHLFXD5JEUAHGJ7R4JZ
    IncludeFailedParam:
      name: includefailed
      in: query
      required: false
      description: Set to true to include failed operations in results. Options include true and false.
      schema:
        type: boolean
        enum:
          - true
          - false
    JoinParam:
      name: join
      in: query
      required: false
      description: Set to transactions to include the transactions which created each of the operations in the response.
    DataParam:
      name: key
      in: path
      required: true
      description: The key name for this data.
      schema:
        type: string
        example: config.memo_required
    SellerParam:
      name: seller
      in: query
      required: false
      description: The account ID of the offer creator.
    SellingAssetTypeParam:
      name: selling_asset_type
      in: query
      required: false
      description: The type for the selling asset. Either native, credit_alphanum4, or credit_alphanum12.
      schema:
        type: string
        enum:
          - native
          - credit_alphanum4
          - credit_alphanum12
    SellingAssetIssuerParam:
      name: selling_asset_issuer
      in: query
      required: false
      description: The Stellar address of the selling asset’s issuer.
    SellingAssetCodeParam:
      name: selling_asset_code
      in: query
      required: false
      description: The code for the selling asset.
    BuyingAssetTypeParam:
      name: buying_asset_type
      in: query
      required: false
      description: The type for the buying asset. Either native, credit_alphanum4, or credit_alphanum12.
      schema:
        type: string
        enum:
          - native
          - credit_alphanum4
          - credit_alphanum12
    BuyingAssetIssuerParam:
      name: buying_asset_issuer
      in: query
      required: false
      description: The Stellar address of the buying asset’s issuer.
    BuyingAssetCodeParam:
      name: buying_asset_code
      in: query
      required: false
      description: The code for the buying asset.
    OfferIDParam:
      name: offer_id
      in: path
      required: true
      description: A unique identifier for this offer.
    OfferIdParam:
      name: offer_id
      in: query
      required: false
      description: The offer ID. Used to filter for trades originating from a specific offer.
    BaseAssetTypeParam:
      name: base_asset_type
      in: query
      required: false
      description: The type for the base asset. Either native, credit_alphanum4, or credit_alphanum12.
      schema:
        type: string
        enum:
          - native
          - credit_alphanum4
          - credit_alphanum12
    BaseAssetIssuerParam:
      name: base_asset_issuer
      in: query
      required: false
      description: The Stellar address of the base asset’s issuer.
      schema:
        type: string
        example: GDUKMGUGDZQK6YHYA5Z6AY2G4XDSZPSZ3SW5UN3ARVMO6QSRDWP5YLEX
    BaseAssetCodeParam:
      name: base_asset_code
      in: query
      required: false
      description: The code for the base asset.
      schema:
        type: string
        example: USD
    CounterAssetTypeParam:
      name: counter_asset_type
      in: query
      required: false
      description: The type for the counter asset. Either native, credit_alphanum4, or credit_alphanum12.
      schema:
        type: string
        enum:
          - native
          - credit_alphanum4
          - credit_alphanum12
    CounterAssetIssuerParam:
      name: counter_asset_issuer
      in: query
      required: false
      description: The Stellar address of the counter asset’s issuer.
      schema:
        type: string
        example: GDUKMGUGDZQK6YHYA5Z6AY2G4XDSZPSZ3SW5UN3ARVMO6QSRDWP5YLEX
    CounterAssetCodeParam:
      name: counter_asset_code
      in: query
      required: false
      description: The code for the counter asset.
    TradeTypeParam:
      name: trade_type
      in: query
      required: false
      description: Can be set to all, orderbook, or liquidity_pools to filter only trades executed across a given mechanism.
      schema:
        type: string
        enum:
          - all
          - orderbook
          - liquidity_pools
  schemas:
    link:
      type: object
      properties:
        href:
          type: string
          format: link
        templated:
          type: boolean
      required:
        - href
    Links:
      type: object
      properties:
        _links:
          type: object
          properties:
            self:
              $ref: '#/components/schemas/link'
            next:
              $ref: '#/components/schemas/link'
            prev:
              $ref: '#/components/schemas/link'
    id:
      type: string
    address:
      type: string
      pattern: G[A-Z0-9]{55}
    sequence:
      type: string
      pattern: '[0-9]+'
    sequence_ledger:
      type: integer
      format: uint32
    subentry_count:
      type: integer
      format: int32
    last_modified_ledger:
      type: integer
      format: uint32
    thresholds:
      type: object
      properties:
        low_threshold:
          type: integer
        med_threshold:
          type: integer
        high_threshold:
          type: integer
    flags:
      type: object
      properties:
        auth_required:
          type: boolean
        auth_revocable:
          type: boolean
        auth_immutable:
          type: boolean
        auth_clawback_enabled:
          type: boolean
    currency:
      type: string
      pattern: '[0-9]+\.[0-9]{7}'
    BalanceLineNative:
      type: object
      properties:
        balance:
          $ref: '#/components/schemas/currency'
        liquidity_pool_id:
          type: string
        limit:
          $ref: '#/components/schemas/currency'
        buying_liabilites:
          $ref: '#/components/schemas/currency'
        selling_liabilites:
          $ref: '#/components/schemas/currency'
        sponser:
          type: string
        last_modified_ledger:
          $ref: '#/components/schemas/last_modified_ledger'
        is_authorized:
          type: boolean
        is_authorized_to_maintain_liabilites:
          type: boolean
        is_clawback_enabled:
          type: boolean
        asset_type:
          type: string
          enum:
            - native
      required:
        - balance
        - limit
        - asset_type
        - buying_liabilites
        - selling_liabilites
        - last_modified_ledger
        - is_authorized
        - is_authorized_to_maintain_liabilites
        - is_clawback_enabled
    BalanceLineAsset:
      type: object
      properties:
        balance:
          $ref: '#/components/schemas/currency'
        limit:
          $ref: '#/components/schemas/currency'
        buying_liabilites:
          $ref: '#/components/schemas/currency'
        selling_liabilites:
          $ref: '#/components/schemas/currency'
        sponser:
          $ref: '#/components/schemas/address'
        last_modified_ledger:
          $ref: '#/components/schemas/last_modified_ledger'
        is_authorized:
          type: boolean
        is_authorized_to_maintain_liabilites:
          type: boolean
        is_clawback_enabled:
          type: boolean
        asset_type:
          type: string
          enum:
            - credit_alphanum4
            - credit_alphanum12
        asset_code:
          type: string
        asset_issuer:
          $ref: '#/components/schemas/address'
      required:
        - balance
        - limit
        - asset_type
        - asset_code
        - asset_issuer
        - buying_liabilites
        - selling_liabilites
        - last_modified_ledger
        - is_authorized
        - is_authorized_to_maintain_liabilites
        - is_clawback_enabled
    BalanceLineLiquidityPool:
      type: object
      properties:
        liquidity_pool_id:
          type: string
        asset_type:
          type: string
          enum:
            - liquidity_pool_shares
        balance:
          $ref: '#/components/schemas/currency'
        limit:
          $ref: '#/components/schemas/currency'
        last_modified_ledger:
          $ref: '#/components/schemas/last_modified_ledger'
        sponser:
          $ref: '#/components/schemas/address'
        is_authorized:
          type: boolean
        is_authorized_to_maintain_liabilites:
          type: boolean
        is_clawback_enabled:
          type: boolean
      required:
        - liquidity_pool_id
        - balance
        - limit
        - asset_type
        - last_modified_ledger
        - is_authorized
        - is_authorized_to_maintain_liabilites
        - is_clawback_enabled
    signers:
      type: object
      properties:
        key:
          $ref: '#/components/schemas/address'
        weight:
          type: integer
          format: int32
        type:
          type: string
          enum:
            - ed25519_public_key
            - sha256_hash
            - preauth_tx
        sponser:
          $ref: '#/components/schemas/address'
      required:
        - key
        - weight
        - type
    Account:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            records:
              type: array
              items:
                type: object
                properties:
                  _links:
                    type: object
                    properties:
                      self:
                        $ref: '#/components/schemas/link'
                      transactions:
                        $ref: '#/components/schemas/link'
                      operations:
                        $ref: '#/components/schemas/link'
                      payments:
                        $ref: '#/components/schemas/link'
                      effects:
                        $ref: '#/components/schemas/link'
                      offers:
                        $ref: '#/components/schemas/link'
                      trades:
                        $ref: '#/components/schemas/link'
                      data:
                        $ref: '#/components/schemas/link'
                    required:
                      - self
                      - transactions
                      - operations
                      - payments
                      - effects
                      - offers
                      - trades
                      - data
                  id:
                    $ref: '#/components/schemas/id'
                  account_id:
                    $ref: '#/components/schemas/address'
                  sequence:
                    $ref: '#/components/schemas/sequence'
                  sequence_ledger:
                    $ref: '#/components/schemas/sequence_ledger'
                  sequence_time:
                    type: string
                  subentry_count:
                    $ref: '#/components/schemas/subentry_count'
                  inflation_destination:
                    $ref: '#/components/schemas/address'
                  home_domain:
                    type: string
                  last_modified_ledger:
                    $ref: '#/components/schemas/last_modified_ledger'
                  last_modified_time:
                    type: string
                  thresholds:
                    $ref: '#/components/schemas/thresholds'
                  flags:
                    $ref: '#/components/schemas/flags'
                  balances:
                    type: array
                    items:
                      anyOf:
                        - $ref: '#/components/schemas/BalanceLineNative'
                        - $ref: '#/components/schemas/BalanceLineAsset'
                        - $ref: '#/components/schemas/BalanceLineLiquidityPool'
                  signers:
                    type: array
                    items:
                      $ref: '#/components/schemas/signers'
                  data:
                    type: object
                  num_sponsoring:
                    type: integer
                  num_sponsered:
                    type: integer
                  sponser:
                    $ref: '#/components/schemas/address'
                  paging_token:
                    type: string
                required:
                  - id
                  - account_id
                  - sequence
                  - subentry_count
                  - last_modified_ledger
                  - last_modified_time
                  - thresholds
                  - flags
                  - balances
                  - signers
                  - data
                  - num_sponsoring
                  - num_sponsered
                  - paging_token
    AccountLink:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            records:
              type: array
              items:
                type: object
                properties:
                  _links:
                    type: object
                    properties:
                      self:
                        $ref: ../instance_variables.yml#/components/schemas/link
                      transactions:
                        $ref: ../instance_variables.yml#/components/schemas/link
                      operations:
                        $ref: ../instance_variables.yml#/components/schemas/link
                      payments:
                        $ref: ../instance_variables.yml#/components/schemas/link
                      effects:
                        $ref: ../instance_variables.yml#/components/schemas/link
                      offers:
                        $ref: ../instance_variables.yml#/components/schemas/link
                      trades:
                        $ref: ../instance_variables.yml#/components/schemas/link
                      data:
                        $ref: ../instance_variables.yml#/components/schemas/link
                $ref: '#/components/schemas/Account'
      required:
        - self
        - transactions
        - operations
        - payments
        - effects
        - offers
        - trades
        - data
    signatures:
      type: array
      items:
        type: string
        pattern: G[A-Z0-9]{55}
    TransactionPreconditionsTimebounds:
      type: object
      properties:
        min_time:
          type: string
        max_time:
          type: string
    TransactionPreconditionsLedgerbounds:
      type: object
      properties:
        min_ledger:
          type: string
        max_ledger:
          type: string
    TransactionPreconditions:
      type: object
      properties:
        timebounds:
          $ref: '#/components/schemas/TransactionPreconditionsTimebounds'
        ledgerbounds:
          $ref: '#/components/schemas/TransactionPreconditionsLedgerbounds'
        min_account_sequence:
          type: string
        min_account_sequence_age:
          type: string
        min_account_sequence_ledger_gap:
          type: integer
          format: uint32
        extra_signers:
          type: array
          items:
            type: string
    hash:
      type: string
    FeeBumpTransaction:
      type: object
      properties:
        hash:
          $ref: '#/components/schemas/hash'
        signatures:
          $ref: '#/components/schemas/signatures'
    InnerTransaction:
      type: object
      properties:
        hash:
          $ref: '#/components/schemas/hash'
        signatures:
          $ref: '#/components/schemas/signatures'
        max_fee:
          type: string
    Transaction:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            records:
              type: array
              items:
                type: object
                properties:
                  memo:
                    type: string
                  memo_bytes:
                    type: string
                  _links:
                    type: object
                    properties:
                      self:
                        $ref: '#/components/schemas/link'
                      account:
                        $ref: '#/components/schemas/link'
                      ledger:
                        $ref: '#/components/schemas/link'
                      operations:
                        $ref: '#/components/schemas/link'
                      effects:
                        $ref: '#/components/schemas/link'
                      precedes:
                        $ref: '#/components/schemas/link'
                      succeeds:
                        $ref: '#/components/schemas/link'
                      transaction:
                        $ref: '#/components/schemas/link'
                    required:
                      - self
                      - account
                      - ledger
                      - operations
                      - effects
                      - precedes
                      - succeeds
                      - transaction
                  id:
                    $ref: '#/components/schemas/id'
                  paging_token:
                    type: string
                  successful:
                    type: boolean
                  hash:
                    type: string
                  ledger:
                    type: integer
                    format: int32
                  created_at:
                    type: string
                  source_account:
                    $ref: '#/components/schemas/address'
                  account_muxed:
                    type: string
                  account_muxed_id:
                    type: string
                  source_account_sequence:
                    type: string
                  fee_account:
                    $ref: '#/components/schemas/address'
                  fee_account_muxed:
                    $ref: '#/components/schemas/address'
                  fee_account_muxed_id:
                    type: string
                  fee_charged:
                    type: string
                  max_fee:
                    type: string
                  operation_count:
                    type: integer
                    format: int32
                  envelope_xdr:
                    type: string
                  result_xdr:
                    type: string
                  result_meta_xdr:
                    type: string
                  fee_meta_xdr:
                    type: string
                  memo_type:
                    type: string
                  signatures:
                    $ref: '#/components/schemas/signatures'
                  valid_after:
                    type: string
                  valid_before:
                    type: string
                  preconditions:
                    $ref: '#/components/schemas/TransactionPreconditions'
                  fee_bump_transaction:
                    $ref: '#/components/schemas/FeeBumpTransaction'
                  inner_transaction:
                    $ref: '#/components/schemas/InnerTransaction'
    Payment:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            records:
              type: array
              items:
                type: object
                properties:
                  _links:
                    type: object
                    properties:
                      self:
                        $ref: '#/components/schemas/link'
                      transaction:
                        $ref: '#/components/schemas/link'
                      effects:
                        $ref: '#/components/schemas/link'
                      succeeds:
                        $ref: '#/components/schemas/link'
                      precedes:
                        $ref: '#/components/schemas/link'
                    required:
                      - self
                      - transaction
                      - effects
                      - succeeds
                      - precedes
                  id:
                    $ref: '#/components/schemas/id'
                  paging_token:
                    type: string
                  transaction_successful:
                    type: boolean
                  source_account:
                    $ref: '#/components/schemas/address'
                  type:
                    type: string
                    example: payment
                  type_i:
                    type: string
                  created_at:
                    type: string
                  transaction_hash:
                    type: string
                  asset_type:
                    type: string
                  asset_code:
                    enum:
                      - native
                      - credit_alphanum4
                      - credit_alphanum12
                  asset_issuer:
                    $ref: '#/components/schemas/address'
                  from:
                    $ref: '#/components/schemas/address'
                  to:
                    $ref: '#/components/schemas/address'
                  amount:
                    type: string
                required:
                  - id
                  - paging_token
                  - transaction_successful
                  - source_account
                  - type
                  - type_i
                  - created_at
                  - transaction_hash
                  - asset_type
                  - from
                  - to
                  - amount
    BaseAsset:
      type: object
      properties:
        asset_type:
          type: string
        asset_code:
          type: string
        asset_issuer:
          type: string
      required:
        - asset_type
    Price:
      type: object
      properties:
        'n':
          type: integer
          format: int32
        d:
          type: integer
          format: int32
    Offer:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            records:
              type: array
              items:
                type: object
                properties:
                  _links:
                    type: object
                    properties:
                      self:
                        $ref: '#/components/schemas/link'
                      offer_maker:
                        $ref: '#/components/schemas/link'
                    required:
                      - self
                      - offer_maker
                  id:
                    $ref: '#/components/schemas/id'
                  paging_token:
                    type: string
                  seller:
                    $ref: '#/components/schemas/address'
                  selling:
                    $ref: '#/components/schemas/BaseAsset'
                  buying:
                    $ref: '#/components/schemas/BaseAsset'
                  amount:
                    type: string
                  price_r:
                    $ref: '#/components/schemas/Price'
                  price:
                    type: string
                  last_modified_ledger:
                    $ref: '#/components/schemas/last_modified_ledger'
                  last_modified_time:
                    type: string
                  sponser:
                    type: string
                required:
                  - id
                  - paging_token
                  - seller
                  - selling
                  - buying
                  - amount
                  - price_r
                  - price
                  - last_modified_ledger
                  - last_modified_time
    paging_token:
      type: string
    tradePrice:
      type: object
      properties:
        'n':
          type: string
        d:
          type: string
    Trade:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            records:
              type: array
              items:
                type: object
                properties:
                  _links:
                    type: object
                    properties:
                      self:
                        $ref: '#/components/schemas/link'
                      base:
                        $ref: '#/components/schemas/link'
                      counter:
                        $ref: '#/components/schemas/link'
                      operation:
                        $ref: '#/components/schemas/link'
                    required:
                      - self
                      - base
                      - counter
                      - operation
                  id:
                    $ref: '#/components/schemas/id'
                  paging_token:
                    $ref: '#/components/schemas/paging_token'
                  ledger_close_time:
                    type: string
                  offer_id:
                    type: string
                  trade_type:
                    type: string
                  liquidity_pool_fee_bp:
                    type: number
                    format: uint32
                  base_liquidity_pool_id:
                    type: string
                  base_offer_id:
                    type: string
                  base_account:
                    $ref: '#/components/schemas/address'
                  base_amount:
                    type: string
                  base_asset_type:
                    type: string
                  base_asset_code:
                    type: string
                  base_asset_issuer:
                    type: string
                  counter_liquidity_pool_id:
                    type: string
                  counter_offer_id:
                    type: string
                  counter_account:
                    $ref: '#/components/schemas/address'
                  counter_amount:
                    type: string
                  counter_asset_type:
                    type: string
                  counter_asset_code:
                    type: string
                  counter_asset_issuer:
                    $ref: '#/components/schemas/address'
                  base_is_seller:
                    type: boolean
                  price:
                    $ref: '#/components/schemas/tradePrice'
                    required:
                      - id
                      - paging_token
                      - ledger_close_time
                      - trade_type
                      - base_amount
                      - base_asset_type
                      - counter_amount
                      - counter_asset_type
                      - base_is_seller
